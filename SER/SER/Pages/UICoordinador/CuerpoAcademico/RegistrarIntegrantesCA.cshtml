@page
@using SER.Entities
@using Microsoft.CodeAnalysis.Scripting
@using NuGet.Protocol
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Mvc
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model SER.Pages.UICoordinador.CuerpoAcademico.RegistrarIntegrantesCA

@{
    ViewData["Title"] = "Registrar integrantes";
}




@Html.AntiForgeryToken()
<div id="registro_pt2" class="container" style="width: 100%; margin-bottom: 200px" >
    <div class="container">
        <div class="d-flex justify-content-center align-content-center h-100" style="margin-bottom: 50px">
            <h3 style="font-size: 20px; margin-top: 40px">REGISTRAR INTEGRANTES DEL CUERPO ACADEMICO</h3>
        </div>
        <div class="input-group mb-2" style="margin-top: 50px; width: 50%">
            <input type="text" class="form-control" style="float: left; min-width: 50px; border-radius: 5px; margin-left: 80px" placeholder="Búscar docente">
            <button class="btn btn-primary" type="button" style="border-radius: 5px; margin-left: 5px; margin-right: 40%;">Búscar</button>
        </div>
    </div>
    <div class="input-group mb-2" style="margin-top: 20px;">
            
        <div class="table-responsive" style="width: 50%; margin-right: 50px; margin-left: 60px; max-height: 500px">
            <h3>Docentes disponibles</h3>
            <table id="tbldocentes" class="table table-bordered">
                <thead class="thead-dark">
                <tr>
                    <th>Nombre</th>
                    <th>Numero de personal</th>
                    <th>Asignación</th>
                </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        <div class="table-responsive table-bordered" style="width: 35%; margin-left: 80px; max-height: 500px">
            <h3>Integrantes</h3>
            <table id="tbldocentesAsignados" class="table table-hover">
                <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Tipo</th>
                    <th>Eliminar</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var integrante in @Model.Integrantes)
                {
                    <tr>
                        <td>@integrante.Nombre</td>
                        <td>@integrante.Tipo</td>
                        <td><button id="btnEliminar&@integrante.NumeroDePersonal" onclick="eliminarRegistro(@integrante.IntegranteId)" class="btn btn-danger eliminar">Eliminar</button></td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
    <div style="width: 30%; margin-left: 80px; float: left">
        <div id="seleccionInvalid" class="alert alert-danger" hidden>
            El profesor que intenta asignar ya es integrante de un cuerpo academico, puedes asignarlo solo como colaborador
        </div>
        <div id="seleccionError"  class="alert alert-danger" hidden>
            Debe seleccionar un tipo de integrante
        </div>
        <select id="select_tipo" asp-for="integranteNuevo.Tipo" class="form-select" style="border-radius: 5px; float: left">
            <option selected disabled="disabled">Selecciona tipo de integrante</option>
            <option value="Integrante">Integrante</option>
            <option value="Colaborador">Colaborador</option>
        </select>
    </div>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <div style="margin-top: 40px" class="container p-5 h-100">
        <div class="d-flex justify-content-center align-content-center h-100">
            <input type="button" id="btnGuardar" onclick="guardarRegistro()" class="btn btn-success" value="Guardar registro"/>
        </div>
    </div>
    <div id="cambiosFalse"  class="alert alert-danger" hidden>
        No hay cambios por guardar
    </div>

    <div id="errorSolicitud" class="alert alert-danger" hidden>
        Ha ocurrido un error al cargar la información de registro.
    </div>
    
    <div id="errorGuardado" class="alert alert-danger" hidden>
        Ha ocurrido un error al guardar la información.
    </div>
    
    <div id="errorEliminacion" class="alert alert-danger" hidden>
        Error al completar los cambios.
    </div>
    <div id="modal" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Datos guardados</h5>
                </div>
                <div class="modal-body">
                    <p>Datos de los integrantes guardados correctamente</p>
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="confirmarRegistro()" class="btn btn-success">Confirmar</button>
                </div>
            </div>
        </div>
    </div>
    
    <div id="modalEliminar" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Eliminar integrante</h5>
                </div>
                <div class="modal-body">
                    <p>¿Deseas confirmar la eliminación?</p>
                    <p>Con esta acción se perderán los datos de los integrantes que aún no han sido registrados al cuerpo academico</p>
                </div>
                <div class="modal-footer">
                    <button id="btnConfirmarEliminacion" type="button" onclick="confirmarEliminacion()" class="btn btn-danger">Comfirmar</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script manipularIntegrantes>
    let tabla_integrantes = document.getElementById("tbldocentesAsignados");
    let idUsuario = localStorage.getItem("idCuerpo");
    let profesorAsignar;
    let tabla_docentes = document.getElementById("tbldocentes");
    let listaDocentes;
    let idIntegranteEliminar;
    let listaDocentesDisponibles;
    let listaIntegrantes = new Array();
    const valores = window.location.search;
    const params = new URLSearchParams(valores)
    let idAcademia = params.get('id');
    let headerUV = document.getElementById("uv_header");
    let navPrincipal = document.getElementById("nav-principal");
    let sectionButtons = document.getElementById("section-buttons");
    let titleNav = document.getElementById("title-nav");
    let navigation = document.getElementById("navigation");
    let listaNavegacion = document.getElementById("element-list");
    let cambios = false;
                 window.onload = function (){
                     cargarDocentes(idAcademia);
                     navPrincipal.hidden = false;
                     listaNavegacion.innerHTML += `<li class="nav-item" style="font-size: 25px">
                                                     <a class="nav-link" href="/Menus/UICoordinador">Coordinación</a>
                                                   </li>
                                                   <li class="nav-item" style="font-size: 25px">
                                                       <a class="nav-link">></a>
                                                   </li>
                                                       <li class="nav-item" style="font-size: 25px">
                                                           <a class="nav-link" href="../UICuerpoAcademico">Cuerpo academico</a>
                                                       </li>
                                                   <li class="nav-item" style="font-size: 25px">
                                                       <a class="nav-link">></a>
                                                   </li>
                                                   <li class="nav-item active" style="font-size: 25px">
                                                        <a class="nav-link" href="CuerposAcademicos">Ver cuerpos academicos</a>
                                                   </li>
                                                   <li class="nav-item" style="font-size: 25px">
                                                       <a class="nav-link">></a>
                                                   </li>
                                                   <li class="nav-item active" style="font-size: 25px">
                                                        <a class="nav-link" onclick="window.location.reload()">Registrar integrantes</a>
                                                   </li>`
                                                       
                 }
    
    function cargarDocentes(){
        $.ajax({
                    url: "?handler=ObtenerDocentes",
                    type: "GET",
                    data: {idAcademiaA: idAcademia},
                     headers: {
                        RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                     },  
                     success: function (data){
                        listaDocentes = JSON.parse(data);
                        llenarTabla(listaDocentes);
                    },
                    error: function (data){
                        document.getElementById('errorSolicitud').hidden = false;
                    }
                }) 
    }
    
    function llenarTabla(listaDocentes){
        listaDocentesDisponibles = listaDocentes;
        for (var i=0; i<listaDocentes.length;i++){
            let row = `<tr id="${listaDocentes.ProfesorId}">
                        <td>${listaDocentes[i].Nombre}</td>
                        <td>${listaDocentes[i].NumeroDePersonal}</td>
                        <td>
                            <button id="btnAsignarMiembro${listaDocentes[i].NumeroDePersonal}" class="btn btn-primary" onclick="asignarProfesor(${listaDocentes[i].ProfesorId})"  style="border-radius: 5px; margin-left: 5px">Asignar</button>
                        </td>
                        </tr>`
            tabla_docentes.innerHTML += row;
        }     
    }
    
    function asignarProfesor(profesorId){
        let combo_tipo = document.getElementById("select_tipo").value;
        cambios = true;
        for (var i = 0; i<listaDocentesDisponibles.length;i++){
            if (profesorId == listaDocentesDisponibles[i].ProfesorId){
                 profesorAsignar = listaDocentesDisponibles[i];
            }
        }
        profesorAsignar.Tipo = combo_tipo;
        if (!validarLista(profesorAsignar)){
            if (profesorAsignar.isIntegrante && combo_tipo == "Integrante"){
                document.getElementById("seleccionInvalid").hidden = false;
                document.getElementById("seleccionError").hidden = true;
            }else{
                 if (combo_tipo != "Selecciona tipo de integrante"){
                                                let row = `<tr class="table-bordered" id="${profesorAsignar.ProfesorId}"><td>${profesorAsignar.Nombre}</td>
                                                                <td>${combo_tipo.toString()}</td>
                                                                <td><button id="btnEliminar${profesorAsignar.NumeroDePersonal}" onclick="eliminarIntegrante('${encodeURIComponent(JSON.stringify(profesorAsignar))}')" class="btn btn-danger eliminar">Eliminar</button></td><tr>`;
                                                tabla_integrantes.innerHTML += row;
                                                listaIntegrantes.push(profesorAsignar);
                                                recargarTabla(profesorId);
                                                llenarTabla(listaDocentesDisponibles);
                                                cambios = true;
                                                document.getElementById("seleccionInvalid").hidden = true;
                                                document.getElementById("seleccionError").hidden = true;
                                            }else{
                                                document.getElementById("seleccionError").hidden = false;
                                            }
            }
        }
    }
     
    function validarLista(profesor){
        var matching = listaIntegrantes.filter(function(profe){
            return profesor.ProfesorId == profe.ProfesorId;
        });
        return matching.length>0;
    }
    
    function eliminarIntegrante(profesorSeleccionado){
        var profesor = JSON.parse(decodeURIComponent(profesorSeleccionado));
        listaIntegrantes.pop(profesor);
        listaDocentesDisponibles.push(profesor);
        recargarEliminados();
        llenarTabla(listaDocentesDisponibles);
        if (listaIntegrantes.length > 0){
            cambios = true;
        }else{
            cambios = false;
        }
    }
    
    var tid = "";
    $(document).on('click', '.eliminar', function(event){
        tid = $(this).parents('tr').attr('id');
        $('#'+tid).remove();
    })
    
   function guardarRegistro(){
        if (cambios){
            for (let i = 0;i<listaIntegrantes.length;i++){
                $.ajax({
                url: "?handler=GuardarRegistro",
                type: "POST",
                data: {NumeroDePersonal: listaIntegrantes[i].NumeroDePersonal, 
                Nombre: listaIntegrantes[i].Nombre, Tipo: listaIntegrantes[i].Tipo, idProfesor: listaIntegrantes[i].ProfesorId, cuerpoID: idAcademia},
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (){
                    $("#modal").modal('show');
                },
                error: function (){
                    document.getElementById('errorGuardado').hidden = false;                   
                }
                })}
        }else{
            document.getElementById("cambiosFalse").hidden = false;
        }
   }
   
   function confirmarRegistro(){
        window.open("CuerposAcademicos", "_self");
   }
   
   
   function eliminarRegistro(idIntegrante){
        $("#modalEliminar").modal('show');
         idIntegranteEliminar = idIntegrante;
   }
   
   function recargarEliminados(){
        $('#tbldocentes > tbody').empty();

   }
   
    function recargarTabla(profesorId){
           let index;
           for (let i=0; i<listaDocentesDisponibles.length; i++){
               if (profesorId == listaDocentesDisponibles[i].ProfesorId){
                   index = i;
                   listaDocentesDisponibles.splice(index,1);
                   $('#tbldocentes > tbody').empty();
               }
           }
    }
       
       
   function confirmarEliminacion(){
        $.ajax({
        url: "?handler=eliminarIntegrante",
        type: "POST",
        data: {idEliminar: idIntegranteEliminar},
        headers: {
            RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
            },  
            success: function (){
            location.reload();
            },
            error: function (){
                document.getElementById('errorSolicitud').hidden = false;
            }
        })
   }
    </script>
}

