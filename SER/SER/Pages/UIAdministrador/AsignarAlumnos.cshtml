@page
@model SER.Pages.UIAdministrador.AsignarAlumnos

@{
    ViewData["Title"] = "Asignar alumnos";
}

@Html.AntiForgeryToken()
<div id="registro_pt2" class="container" style="width: 100%" >
    <div class="container">
        <div class="d-flex justify-content-center align-content-center h-100" style="margin-bottom: 50px">
            <h3 style="font-size: 20px; margin-top: 40px">ASIGNAR ALUMNOS A EXPERIENCIA EDUCATIVA</h3>
        </div>
        <div class="input-group mb-2" style="margin-top: 50px; width: 50%">
            <input type="text" class="form-control" style="float: left; min-width: 50px; border-radius: 5px; margin-left: 80px" placeholder="Búscar estudiante">
            <button class="btn btn-primary" type="button" style="border-radius: 5px; margin-left: 5px; margin-right: 40%;">Búscar</button>
        </div>
    </div>
    <div class="input-group mb-2" style="margin-top: 20px;">
        <div class="table-responsive" style="width: 50%; margin-right: 50px; margin-left: 60px; max-height: 500px">
            <h3>Alumnos disponibles</h3>
            <table id="tblEstudiantesDisponibles" class="table table-bordered">
                <thead class="thead-dark">
                <tr>
                    <th>Nombre</th>
                    <th>Matricula</th>
                    <th>Asignación</th>
                </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        <div class="table-responsive table-bordered" style="width: 35%; margin-left: 80px; max-height: 500px">
            <h3>Alumnos asignados</h3>
            <table id="tblEstudiantesAsignadosEE" class="table table-hover">
                <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Matricula</th>
                    <th>Eliminar</th>
                </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
    <br/>
    <br/>
    <div style="width: 30%; margin-left: 80px; float: left">
        <div id="integrantesInvalidos" class="alert alert-danger" hidden>
            Solo se admiten 3 integrantes para un solo trabajo recepcional.
        </div>
    </div>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <div style="margin-top: 40px" class="container p-5 h-100">
        <div class="d-flex justify-content-center align-content-center h-100">
            <input type="button" id="btn_Guardar" onclick="guardarRegistro()" class="btn btn-success" value="Guardar registro"/>
        </div>
    </div>
    <div id="cambiosFalse"  class="alert alert-danger" hidden>
        No hay cambios por guardar
    </div>
    <div id="errorRegistro" class="alert alert-danger" hidden>
        Ha ocurrido un error al guardar la información.
    </div>

    <div id="modal" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Datos guardados</h5>
                </div>
                <div class="modal-body">
                    <p>Estudiantes asignados correctamente.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="confirmarRegistro()" class="btn btn-success">Confirmar</button>
                </div>
            </div>
        </div>
    </div>
    
    <div id="modalEliminarEstudiante" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Eliminar estudiante</h5>
                </div>
                <div class="modal-body">
                    <p>¿Deseas confirmar la eliminación?</p>
                    <p>Con esta acción se perderán los datos de los estudiantes que aún no han sido registrados a la experiencia educativa</p>
                </div>
                <div class="modal-footer">
                    <button id="btnConfirmarEliminacion" type="button" onclick="confirmarEliminacionEstudiante()" class="btn btn-danger">Comfirmar</button>
                    <button type="button" class="btn btn-secondary" onclick="cerrarModal()" data-dismiss="modal">Cancelar</button>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script show>
  let headerUV = document.getElementById("uv_header");
  let navPrincipal = document.getElementById("nav-principal");
  let sectionButtons = document.getElementById("section-buttons");
  let titleNav = document.getElementById("title-nav");
  let navigation = document.getElementById("navigation");
  let listaNavegacion = document.getElementById("element-list");
  //Variables para registro de alumnos
  const valores = window.location.search;
  const params = new URLSearchParams(valores)
  let idExperiencia = params.get('id');
  let listaEstudiantesDisponibles = new Array();
  let listaEstudiantesAsignados = new Array();
  let listaEstudiantesPorAsignar = new Array();
  let tablaEstudiantesDisponibles = document.getElementById("tblEstudiantesDisponibles");
  let tablaEstudiantesAsignados = document.getElementById("tblEstudiantesAsignadosEE");
  let matriculaEliminar;
  let cambios = false;
  
  function cerrarModal(){
      $('#modalEliminarEstudiante').modal('hide');
  }
  
  function confirmarRegistro(){
      window.open("ExperienciasEducativas", "_self");
  }
  
  function confirmarEliminacionEstudiante(){
          $.ajax({
              url: "?handler=EliminarEstudianteAsignadoEE",
              type: "POST",
              data: {matriculaEstudiante: matriculaEliminar, experienciaId: idExperiencia},
              headers: {
                  RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
              },
              success: function (res){
                  if(res.success){
                      document.location.reload();
                      cambios = true;
                  }else{
                      document.getElementById('errorRegistro').hidden = false;
                  }
                  },
              });
  }
  
   function eliminarAlumnoAsignado(alumnoEliminar){
      var alumno = JSON.parse(decodeURIComponent(alumnoEliminar));
      listaEstudiantesPorAsignar.pop(alumno);
      listaEstudiantesDisponibles.push(alumno);
      recargarEliminados();
      llenarTabla(listaEstudiantesDisponibles);
      $('#tblEstudiantesAsignadosEE').find('#'+alumno.Matricula).remove();
  }
  
   function recargarEliminados(){
      $('#tblEstudiantesDisponibles > tbody').empty();
  }
  
  function guardarRegistro(){
          if (cambios){
              for (let i = 0;i<listaEstudiantesPorAsignar.length;i++){
                  $.ajax({
                  url: "?handler=GuardarRegistroEstudiantesEE",
                  type: "POST",
                  data: {nombreEstudiante: listaEstudiantesPorAsignar[i].Nombre, 
                  matriculaEstudiante: listaEstudiantesPorAsignar[i].Matricula, experienciaId: idExperiencia},
                  headers: {
                      RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                  },
                  success: function (res){
                      if(res.success){
                          $("#modal").modal('show');
                      }else{
                          document.getElementById('errorRegistro').hidden = false;
                      }
                  }
                  })}
          }else{
              document.getElementById("cambiosFalse").hidden = false;
          }
   }
  
   function asignarEstudiante(Matricula){
          let alumnoAsignar = getAlumno(Matricula);
          if (alumnoAsignar!=null){
              let row = `<tr class="table-bordered" id="${alumnoAsignar.Matricula}"><td>${alumnoAsignar.Nombre}</td>
                                            <td>${alumnoAsignar.Matricula}</td>
                                            <td><button id="btnEliminar${alumnoAsignar.Matricula}" onclick="eliminarAlumnoAsignado('${encodeURIComponent(JSON.stringify(alumnoAsignar))}')" 
                                            class="btn btn-danger eliminarSinodal">Eliminar</button></td><tr>`;
              listaEstudiantesPorAsignar.push(alumnoAsignar);
              recargarTabla(alumnoAsignar.Matricula);
              llenarTabla(listaEstudiantesDisponibles);
              tablaEstudiantesAsignados.innerHTML += row;
              cambios = true;
          }
   }
   
   function getAlumno(matricula){
            for (let i = 0; i<listaEstudiantesDisponibles.length;i++){
                if (matricula == listaEstudiantesDisponibles[i].Matricula){
                    return listaEstudiantesDisponibles[i];
                }
            }
   }
  
  function cargarEstudiantesDisponibles(){
          $.ajax({
              url: "?handler=ObtenerEstudiantesEEDisponibles",
              type: "GET",
              headers: {
                  RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                  },  
                  success: function (data){
                  listaEstudiantesDisponibles = JSON.parse(data);
                  llenarTabla(listaEstudiantesDisponibles);
                  },
                  error: function (data){
                  $('#errorAlert').hidden = false;
              }
          }) 
  }
  
  function cargarEstudiantesAsignados(){
            $.ajax({
              url: "?handler=ObtenerEstudiantesAsignadosEE",
              type: "GET",
              data: {experienciaId: idExperiencia},
              headers: {
                  RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                  },  
              success: function (data){
                  listaEstudiantesAsignados = JSON.parse(data);
                  llenarTablaAsignados(listaEstudiantesAsignados);
                  },
                  error: function (data){
                      $('#errorAlert').hidden = false;
              }
            });   
  }
  
  
  
  function llenarTablaAsignados(listaAsignados){
          for (var i=0; i<listaAsignados.length;i++){
              let row = `<tr id='${listaAsignados[i].AlumnoId}'>
                          <td>${listaAsignados[i].Nombre}</td>
                            <td>${listaAsignados[i].AlumnoId}</td>
                          <td><button id="btnEliminar${listaAsignados[i].AlumnoId}" onclick="eliminarEstudianteAsignadoGuardado('${listaAsignados[i].AlumnoId}')" class="btn btn-danger">Eliminar</button></td>
                          </tr>`
              tablaEstudiantesAsignados.innerHTML += row;
          }   
  }
  
  function llenarTabla(listaEstudiantes){
          listaEstudiantesDisponibles = listaEstudiantes;
          for (var i=0; i<listaEstudiantes.length;i++){
              let row = `<tr id='${listaEstudiantes[i].Matricula}'>
                          <td>${listaEstudiantes[i].Nombre}</td>
                          <td>${listaEstudiantes[i].Matricula}</td>
                          <td><button id="btnAsignar${listaEstudiantes[i].Matricula}" onclick="asignarEstudiante('${listaEstudiantes[i].Matricula}')" class="btn btn-primary">Asignar</button></td>
                          </tr>`
              tablaEstudiantesDisponibles.innerHTML += row;
          }     
  }
  
  function recargarTabla(matricula){
       let index;
       for (let i=0; i<listaEstudiantesDisponibles.length; i++){
           if (matricula == listaEstudiantesDisponibles[i].Matricula){
               index = i;
               listaEstudiantesDisponibles.splice(index,1);
               $('#tblEstudiantesDisponibles > tbody').empty();
           }
       }
   }
  
  function eliminarEstudianteAsignadoGuardado(matricula){
      matriculaEliminar = matricula;
      $('#modalEliminarEstudiante').modal('show')
  }
   
  window.onload = function (){
    cargarEstudiantesDisponibles()
    cargarEstudiantesAsignados();
    navPrincipal.hidden = false;
    listaNavegacion.innerHTML += `<li class="nav-item active" style="font-size: 25px">
                                            <a class="nav-link" href="../Menus/UIAdministración">Administración</a>
                                        </li>
                                    <li class="nav-item" style="font-size: 25px">
                                        <a class="nav-link">></a>
                                    </li>
                                        <li class="nav-item active" style="font-size: 25px">
                                            <a class="nav-link" href="ExperienciasEducativas">Experiencias educativas</a>
                                        </li>
                                    <li class="nav-item" style="font-size: 25px">
                                        <a class="nav-link">></a>
                                    </li>
                                        <li class="nav-item active" style="font-size: 25px">
                                            <a class="nav-link" onclick="window.location.reload()">Asignar alumnos a experiencia</a>
                                        </li>`
  }
  </script>
}